<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.inertia.solutions</groupId>
	<artifactId>devl-examples</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>devl-examples</name>

	<modules>
		<module>aop-example</module>
		<module>cxf-ws-example</module>
		<module>hibernate-example</module>
		<module>rabbitmq</module>
		<module>mvc-example</module>
		<module>restful-service-example</module>
		<module>spring-threading-example</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<java-version>1.7</java-version>
		<maven-compile-version>3.1</maven-compile-version>
		<sonar-version>2.0</sonar-version>
		<checkstyle-version>2.11</checkstyle-version>

		<spring-version>3.2.4.RELEASE</spring-version>
		<log4j-version>1.2.14</log4j-version>
		<hibernate-version>4.2.0.Final</hibernate-version>
		<aspectj-version>1.7.3</aspectj-version>
		<commons-lang-version>2.3</commons-lang-version>
		<cxf-version>2.7.0</cxf-version>
		<hibernate-version>4.2.0.Final</hibernate-version>
		<commons-dbcp-version>1.4</commons-dbcp-version>
		<postgres-version>9.2-1003-jdbc4</postgres-version>
		<rabbitmq-version>1.3.0</rabbitmq-version>
		<jstl-version>1.2</jstl-version>
		<jackson.version>1.9.10</jackson.version>

		<junit-version>4.11</junit-version>
		<mockito-version>1.9.5</mockito-version>
		<jacoco-version>0.6.3.201306030806</jacoco-version>
		<pittest-version>0.31</pittest-version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Spring Depenedencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring-version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring-version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring-version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring-version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring-version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring-version}</version>
			</dependency>

			<!-- Javax -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl-version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- Aspects -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj-version}</version>
			</dependency>

			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate-version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-version}</version>
			</dependency>

			<!-- Database -->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgres-version}</version>
			</dependency>

			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons-dbcp-version}</version>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j-version}</version>
			</dependency>

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang-version}</version>
			</dependency>

			<!-- CXF WS -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf-version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf-version}</version>
			</dependency>

			<!-- MQ -->
			<dependency>
				<groupId>com.rabbitmq</groupId>
				<artifactId>rabbitmq-client</artifactId>
				<version>${rabbitmq-version}</version>
			</dependency>

			<!-- Testing Dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit-version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito-version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compile-version}</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.6.3.201306030806,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
											<goal>report</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pittest-version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-version}</version>
					<configuration>
						<excludes>
							<exclude>**/Launcher*</exclude>
							<exclude>**/SpringConfiguration*</exclude>
							<exclude>**/WebConfiguration*</exclude>
						</excludes>
						<rules>
							<rule>
								<element>BUNDLE</element>
								<excludes>
									<exclude>*Test</exclude>
								</excludes>
								<limits>
									<limit>
										<counter>CLASS</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.class.coverage}</minimum>
									</limit>
									<limit>
										<counter>METHOD</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.method.coverage}</minimum>
									</limit>
									<limit>
										<counter>LINE</counter>
										<value>COVEREDRATIO</value>
										<minimum>${jacoco.line.coverage}</minimum>
									</limit>
								</limits>
							</rule>
						</rules>
					</configuration>
					<executions>
						<execution>
							<id>prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<skip>${skipJacoco}</skip>
								<destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
							</configuration>
						</execution>
						<execution>
							<id>report</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<skip>${skipJacoco}</skip>
								<dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
							</configuration>
						</execution>
						<execution>
							<id>checkid</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<skip>${skipJacoco}</skip>
								<dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${checkstyle-version}</version>
					<inherited>true</inherited>
					<configuration>
						<configLocation>checkstyle-checks.xml</configLocation>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>